name: Code Quality Check

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write

jobs:
  lint-and-label:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Lint code
      - name: Lint code
        run: npm run lint
        continue-on-error: true

      # Step 5: Set Lint Status
      - name: Set Lint Status
        run: echo "LINT_STATUS=$?" >> $GITHUB_ENV

      # Step 6: Use actions/labeler
      - name: Use actions/labeler
        uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

      # Step 7: Label PR
      - name: Label PR
        if: success()
        run: echo "PR_LABELS=${{ steps.labeler.outputs.labels }}" >> $GITHUB_ENV

      # Step 8: Determine changes
      - name: Determine changes
        id: changes
        run: echo "::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"

      # Step 9: Display labels
      - name: Display labels
        run: echo "::set-output name=PR_LABELS::${{ env.PR_LABELS }}"
        id: set-labels

      # Step 10: Add Label on Lint Success
      - name: Add Label on Lint Success
        if: success() && env.LINT_STATUS == '0'
        run: echo "LINT_LABEL=lint-passed" >> $GITHUB_ENV

      # Step 11: Add Label on Lint Failure
      - name: Add Label on Lint Failure
        if: failure() || env.LINT_STATUS != '0'
        run: echo "LINT_LABEL=lint-failed" >> $GITHUB_ENV

      # Step 12: Display lint label
      - name: Display lint label
        run: echo "LINT_LABEL=${{ env.LINT_LABEL }}" >> $GITHUB_ENV

      # Step 13: Set Environment File
      - name: Set Environment File
        run: echo "::save-state name=ENV_FILE::$(echo 'LINT_LABEL=${{ env.LINT_LABEL }}' >> $GITHUB_ENV)"
